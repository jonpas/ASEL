/*
 * generated by Xtext 2.19.0
 */
package org.jonpas.asel.ui.wizard

import org.eclipse.xtext.ui.XtextProjectHelper
import org.eclipse.xtext.ui.util.ProjectFactory
import org.eclipse.xtext.ui.wizard.template.IProjectGenerator
import org.eclipse.xtext.ui.wizard.template.IProjectTemplateProvider
import org.eclipse.xtext.ui.wizard.template.ProjectTemplate

/**
 * Create a list with all project templates to be shown in the template new project wizard.
 * 
 * Each template is able to generate one or more projects. Each project can be configured such that any number of files are included.
 */
class ASELProjectTemplateProvider implements IProjectTemplateProvider {
	override getProjectTemplates() {
		#[new EmptyProject, new LEDProject]
	}
}

@ProjectTemplate(label="Empty", icon="project_template.png", description="<p><b>Empty</b></p>
<p>This is an empty project for ASEL.</p>")
final class EmptyProject {
	override generateProjects(IProjectGenerator generator) {
		generator.generate(new ProjectFactory => [
			projectName = projectInfo.projectName
			location = projectInfo.locationPath
			projectNatures += XtextProjectHelper.NATURE_ID
			builderIds += XtextProjectHelper.BUILDER_ID
			addFile('''src/main.asel''', '''
				# This is an empty ASEL program
				
				# Runs always before anything else, outside of `prepare` and `run`
				init {
				
				}
				
				# Runs once on power on or reset
				prepare {
				
				}
				
				# Loops forever
				run {
					
				}
			''')
		])
	}
}

@ProjectTemplate(label="LED", icon="project_template.png", description="<p><b>LED</b></p>
<p>This is a parameterized LED enabler for ASEL. You can set a parameter to modify the content in the generated file.</p>")
final class LEDProject {
	val pin = text("LED Pin:", "5", "Pin of the LED for your board")

	override generateProjects(IProjectGenerator generator) {
		generator.generate(new ProjectFactory => [
			projectName = projectInfo.projectName
			location = projectInfo.locationPath
			projectNatures += XtextProjectHelper.NATURE_ID
			builderIds += XtextProjectHelper.BUILDER_ID
			addFile('''src/main.asel''', '''
				# This is an example ASEL program that turns on an LED
				
				# Runs always before anything else, outside of `prepare` and `run`
				init {
					pin LED = «pin»
				}
				
				# Runs once on power on or reset
				prepare {
					out LED
					LED = on
				}
			''')
		])
	}
}
